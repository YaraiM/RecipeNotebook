name: Java CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  EC2_USER: 'ec2-user'
  EC2_HOST: '3.112.42.163'
  SRC_PATH: 'RecipeNotebook/build/libs/*.jar'
  DEST_PATH: '/home/ec2-user/RecipeNotebook.jar'

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x RecipeNotebook/gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew bootJar
        working-directory: RecipeNotebook

      - name: Test with Gradle Wrapper
        run: ./gradlew test --info
        working-directory: RecipeNotebook

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: RecipeNotebook/build/reports/tests/test/

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-logs
          path: RecipeNotebook/build/test-results/test/

      - name: Run Spring Boot to serve API docs
        run: java -jar build/libs/*.jar &
        working-directory: RecipeNotebook

      - name: Wait for the application to start
        run: |
          for i in {1..15}; do
            nc -z localhost 8080 && break
            echo "Waiting for the application to start..."
            sleep 2
          done

      - name: Download OpenAPI spec
        run: curl -o RecipeNotebook/openapi.json http://localhost:8080/v3/api-docs

      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: RecipeNotebook/swagger-ui
          spec-file: RecipeNotebook/openapi.json
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload OpenAPI DOCS
        uses: actions/upload-artifact@v4
        with:
          name: openapi-docs
          path: RecipeNotebook/swagger-ui

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: RecipeNotebook/swagger-ui
          force_orphan: true

      - name: SCP Copy Application to EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key $SRC_PATH $EC2_USER@$EC2_HOST:$DEST_PATH

      - name: SSH Application Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          envs: DEST_PATH
          script: |
            sudo yum update -y
            if [ -f /etc/systemd/system/RecipeNotebook.service ]; then
              echo "already exists Service File"
            else
            cat <<EOL | sudo tee -a /etc/systemd/system/RecipeNotebook.service
            [Unit]
            Description = RecipeNotebook App
            
            [Service]
            ExecStart = java -jar ${DEST_PATH}
            EnvironmentFile = /etc/sysconfig/RecipeNotebook
            Restart = no
            Type = simple
            User = ec2-user
            Group = ec2-user
            SuccessExitStatus = 143
            
            [Install]
            WantedBy = multi-user.target
            EOL
            fi
            
            sudo systemctl daemon-reload
            if sudo systemctl status RecipeNotebook 2>&1 | grep "Active: active (running)" ; then
              sudo systemctl restart RecipeNotebook
            else
              sudo systemctl start RecipeNotebook
            fi